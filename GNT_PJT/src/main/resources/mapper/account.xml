<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<mapper namespace="ns.sql.AccountMapper">
	<resultMap type="account" id="userSelectMap">
		<result property="accId" column="acc_id" jdbcType="VARCHAR" />	
		<result property="cardId" column="card_id" jdbcType="VARCHAR" />	
		<result property="accPassword" column="acc_password" jdbcType="NUMERIC" />	
		<result property="createTime" column="create_time" jdbcType="DATE" />
		<result property="accAmount" column="acc_amount" jdbcType="NUMERIC" />	
		<result property="mileage" column="mileage" jdbcType="NUMERIC" />	
	</resultMap>

	<select id="createAccKey" resultType="string">
		SELECT TRUNC(DBMS_RANDOM.VALUE(power(10,12)+1, power(10,13)-1)) RANDOM FROM DUAL
	</select>
	<select id="validateAccId" parameterType="string" resultType="string">
		SELECT count(acc_id) FROM account
		WHERE acc_id = #{VALUE}
	</select>
	<insert id="createAcc" parameterType="account">
		INSERT	INTO account(acc_id, acc_password, create_time)
		VALUES (#{accId}, #{accPassword}, SYSDATE)
	</insert>
	<select id="checkUserAcc" resultType="string" parameterType="integer">
		SELECT count(acc_id) FROM users
		WHERE user_id = #{VALUE}
	</select>
<!--
	selectKey 관련된 MyBatis 버그로 해당사항 주석처리합니다.
 	<insert id="createAcc" parameterType="account">
 		<selectKey keyProperty="accId" resultType="_long" order="BEFORE">
		SELECT TRUNC(DBMS_RANDOM.VALUE(power(10,12)+1, power(10,13)-1)) RANDOM FROM DUAL
		</selectKey>
		INSERT	INTO account(acc_id, acc_password, create_time)
		VALUES (#{accId}, #{accPassword}, SYSDATE)
	</insert> 
-->
	
<!-- (acc_id, card_id, acc_password, create_time, acc_amount, mileage) -->
<!-- VALUES (#{id}, #{accPassword}, sysdate) -->

	<select id="getAccBalance" parameterType="string" resultType="int">
		SELECT acc_amount
		FROM account
		WHERE acc_id = #{VALUE}
	</select>
	
	<update id="depositAcc" parameterType="account">
		UPDATE account
		SET acc_amount = acc_amount 
		<if test="#{accAmount} lt 0">
		- ABS(#{accAmount})
		</if>
		<if test="#{accAmount} ge 0">
		+ ABS(#{accAmount})
		</if>
		WHERE acc_id = #{accId}
	</update>
	
	<update id="createMile" parameterType="string">
		UPDATE account
		SET is_mileage = '1'
		WHERE acc_id = #{VALUE}
	</update>
	
<!-- 
		INSERT	INTO mileageHistory
		(mileage_pk, acc_id, create_time, mileage_amount)
		(acc_id, card_id, acc_password, create_time, acc_amount, mileage)
		VALUES (
		(SELECT mileage_seq.nextVal FROM dual),
		#{accId}, SYSDATE, 0)
 -->
	
	<select id="getMileBalance" parameterType="string" resultType="int">
		SELECT mileage
		FROM account
		WHERE acc_id = #{VALUE}
	</select>
	
	<select id="getLastMileHistory" parameterType="string" resultType="mileageHistory">
 		SELECT mileage_pk, acc_id, create_time, mileage_amount, mileage_content
			FROM (
				SELECT mileage_amount
				FROM mileage_history
				WHERE acc_id = #{VALUE}
				ORDER BY create_time desc
			)
		WHERE rownum = 1
		</select>

	<insert id="addMileHistory" parameterType="mileageHistory">
	INSERT	INTO mileageHistory
		(mileage_pk, acc_id, create_time, mileage_amount, mileage_content)
		VALUES (
		(SELECT mileage_seq.nextVal FROM dual),
		#{accId}, SYSDATE, #{mileageAmount}, #{mileageContent})
	</insert>
	<update id="addMile" parameterType="account">
		UPDATE account
		SET mileage = mileage + #{mileage}
		WHERE mileage_pk = #{accId}
	</update>
	
	<select id="getMileageHistory" parameterType="string" resultType="mileageHistory">
		SELECT *
		FROM mileage_history
		WHERE acc_id = #{VALUE}
	</select>

	<select id="getAccount" parameterType="string" resultType="account">
		SELECT acc_id, card_id, create_time, acc_amount, mileage
		FROM account
		WHERE acc_id = #{VALUE}
	</select>
	
</mapper>